@page "/"
@inject HttpClient Http

<PageTitle>Index</PageTitle>

<h1>Exercises</h1>

@if (ExerciseCategories is not null)
{
    <div class="form">
        <label>
            Exercise Name
            <input @bind="ExerciseName" class="form-control" type="text">
        </label>
        <label>
            Category
            <select @bind="CategoryId">
                @foreach (var category in ExerciseCategories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>
        </label>
        <button @onclick="SubmitForm" class="btn">Create</button>
    </div>
}

@if (Exercises is null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <td>Name</td>
            <td>Category Name</td>
        </tr>
        </thead>
        <tbody>
        @foreach (var exercise in Exercises)
        {
            <tr>
                <td>@exercise.Name</td>
                <td>@exercise.CategoryName</td>
            </tr>
        }
        </tbody>
    </table>
}


@code {

    private List<Exercise>? Exercises { get; set; }
    
    private List<ExerciseCategory>? ExerciseCategories { get; set; }
    
    private int CategoryId { get; set; }

    private string ExerciseName { get; set; } = string.Empty;

    private class Exercise
    {
        public string Name { get; set; }
        
        public string CategoryName { get; set; }
        
        public int CategoryId { get; set; }
    }

    private class ExerciseCategory
    {
        public string Name { get; set; }
        
        public int Id { get; set; }
    }

    private class AddExerciseRequest
    {
        public string Name { get; set; }
        
        public int CategoryId { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        Exercises = await Http.GetFromJsonAsync<List<Exercise>>("Exercise/Get");
        ExerciseCategories = await Http.GetFromJsonAsync<List<ExerciseCategory>>("ExerciseCategory/Get");
    }

    private async Task SubmitForm()
    {
        var exercise = new Exercise
        {
            Name = ExerciseName,
            CategoryId = CategoryId,
            CategoryName = ExerciseCategories?.FirstOrDefault(x => x.Id == CategoryId)?.Name ?? string.Empty
        };
        await Http.PostAsJsonAsync("Exercise/Add", exercise); //new AddExerciseRequest {Name = ExerciseName, CategoryId = CategoryId});
        Exercises?.Add(exercise);
    }

}